#!/bin/sh

# Usage:
# `$0`: Ask for recording type via bemenu
# `$0 screencast`: Record both audio and screen
# `$0 video`: Record only screen
# `$0 audio`: Record only audio
# `$0 kill`: Kill existing recording
#
# If there is already a running instance, user will be prompted to end it.
#
# These have zmq filters and are meant to be used with my ffmpeg_zmq script
#
###########################################################
#                                                         #
# MUST RUN : doas setcap cap_sys_admin+ep /usr/bin/ffmpeg #
#                                                         #
###########################################################

# updateicon() {
#     echo "$1" >/tmp/recordingicon
#     pkill -RTMIN+18 "${STATUSBAR:-dwmblocks}"
# }

killrecording() {
    recpid="$(cat /tmp/recording.pid)"
    # kill with SIGTERM, allowing finishing touches.
    # kill -15 "$recpid"
    kill -9 $(pidof ffmpeg)
    rm -f /tmp/recording.pid
    updateicon ""
    # pkill -RTMIN+18 "${STATUSBAR:-dwmblocks}"
    # even after SIGTERM, ffmpeg may still run, so SIGKILL it.
    sleep 3
    kill -9 "$recpid"
    exit
}

audio_alsa() {
    ffmpeg \
        -thread_queue_size 64 \
        -f alsa \
        -i sysdefault:CARD=Generic_1 \
        -c:a flac -ar 48000 -ac 2 -b:a 512k \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' \
        "$HOME/music/recording/audio-$(date '+%y%m%d-%H%M-%S').flac" &
    echo $! >/tmp/recording.pid
    # updateicon "🎙️"
}

audio_pulse() {
    ffmpeg \
        -threads:a 1 -filter_threads 1 \
        -f pulse -thread_queue_size 64 \
        -i default \
        -c:a flac -ar 48000 -ac 2 -b:a 512k \
        -compression_level 8 \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' \
        "$HOME/videos/recording/audio-$(date '+%y%m%d-%H%M-%S').aac" &
    echo $! >/tmp/recording.pid
    # updateicon "🎙️"
}

audio_jack() {
    ffmpeg \
        -threads:a 1 -filter_threads 1 \
        -f jack -thread_queue_size 64 \
        -i ffmpeg \
        -c:a flac -ac 2 -ar 48000 -b:a 512k \
        -compression_level 8 \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' \
        -strict -2 \
        "$HOME/videos/recording/audio-$(date '+%y%m%d-%H%M-%S').flac" &
    echo $! >/tmp/recording.pid
    # updateicon "🎙️"
}

screenshot_kms() {
    ffmpeg \
        -threads:v 1 -filter_threads 1 \
        -device /dev/dri/card0 \
        -f kmsgrab -thread_queue_size 128 \
        -i - \
        -vf 'hwmap=derive_device=vaapi,hwdownload,format=bgr0' \
        -s 1920x1080 -c:v mjpeg -frames:v 1 \
        "$HOME/pictures/recording/screenshot-$(date '+%y%m%d-%H%M-%S').jpeg" &
}

video() {
    ffmpeg -probesize 42M \
        -threads:v 1 -filter_threads 1 \
        -f x11grab -thread_queue_size 128 \
        -vaapi_device /dev/dri/renderD128 \
        -video_size "$(xdpyinfo | grep dimensions | awk '{print $2;}')" \
        -framerate 60 \
        -i "$DISPLAY" \
        -vf 'format=nv12,hwupload' \
        -c:v hevc_vaapi -qp 24 \
        -strict -2 \
        "$HOME/videos/recording/video-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! >/tmp/recording.pid
    # updateicon "⏺️"
}

video_kms() {
    ffmpeg \
        -threads:v 1 -filter_threads 1 \
        -device /dev/dri/card0 \
        -framerate 60 \
        -f kmsgrab -thread_queue_size 128 \
        -i - \
        -vf 'hwmap=derive_device=vaapi,scale_vaapi=w=1920:h=1080:format=nv12' \
        -c:v hevc_vaapi -qp 24 \
        -strict -2 \
        -movflags +frag_keyframe+separate_moof+omit_tfhd_offset+empty_moov \
        "$HOME/videos/recording/video-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! >/tmp/recording.pid
    # updateicon "⏺️"

}
nvenc_video_kms() {
    prime-run ffmpeg \
        -threads:v 1 -filter_threads 1 \
        -device /dev/dri/card0 \
        -framerate 60 \
        -f kmsgrab -thread_queue_size 128 \
        -i - \
        -vf 'hwmap=derive_device=vaapi,hwdownload,format=bgr0' \
        -c:v hevc_nvenc -qp 24 \
        -strict -2 \
        -movflags +frag_keyframe+separate_moof+omit_tfhd_offset+empty_moov \
        "$HOME/videos/recording/video-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! >/tmp/recording.pid
    # updateicon "⏺️"
}

webcam() {
    ffmpeg \
        -threads:v 1 -threads:a 1 -filter_threads 1 \
        -vaapi_device /dev/dri/renderD128 \
        -f v4l2 -thread_queue_size 256 \
        -framerate 30 \
        -i /dev/video0 \
        -f jack -thread_queue_size 256 \
        -i ffmpeg \
        -c:a libopus -ac 2 -ar 48000 -b:a 512k \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' \
        -vf "lut3d=$HOME/.local/share/luts/35FreeLUTs/Azrael\ 93.CUBE:interp=tetrahedral,format=nv12|vaapi,hwupload,scale_vaapi=w=1920:h=1080:format=nv12" \
        -c:v hevc_vaapi -qp 24 \
        -strict -2 \
        "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! >/tmp/recording.pid
    # updateicon "🎥"
}

webcamhidef() {
    ffmpeg \
        -threads:v 1 -threads:a 1 -filter_threads 1 \
        -vaapi_device /dev/dri/renderD128 \
        -f v4l2 -thread_queue_size 256 \
        -video_size 1920x1080 \
        -framerate 60 \
        -i /dev/video0 \
        -f jack -thread_queue_size 256 \
        -i ffmpeg \
        -c:a libopus -ac 2 -ar 48000 -b:a 512k \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' \
        -vf "lut3d=$HOME/.local/share/luts/35FreeLUTs/Azrael\ 93.CUBE:interp=tetrahedral,format=nv12,hwupload" \
        -c:v hevc_vaapi -qp 24 \
        -strict -2 \
        "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! >/tmp/recording.pid
    # updateicon "🎥"
}

screencast_alsa() {
    ffmpeg \
        -threads:v 1 -threads:a 1 -filter_threads 1 -filter_complex_threads 1 \
        -device /dev/dri/card0 \
        -f kmsgrab -thread_queue_size 256 \
        -framerate 60 \
        -i - \
        -f alsa -thread_queue_size 256 \
        -i sysdefault:CARD=Generic_1 \
        -c:a libopus -ac 2 -ar 48000 -b:a 512k \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' \
        -vf 'hwmap=derive_device=vaapi,scale_vaapi=w=1920:h=1080:format=nv12' \
        -c:v hevc_vaapi -qp 24 \
        -strict -2 \
        "$HOME/videos/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! >/tmp/recording.pid
    # updateicon "⏺️🎙️"
}

screencast_pulse() {
    ffmpeg \
        -threads:v 1 -threads:a 1 -filter_threads 1 -filter_complex_threads 1 \
        -device /dev/dri/card0 \
        -framerate 60 \
        -f kmsgrab -thread_queue_size 256 \
        -i - \
        -f pulse -thread_queue_size 256 \
        -i default \
        -c:a libopus -ac 2 -ar 48000 -b:a 512k \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' \
        -vf 'hwmap=derive_device=vaapi,scale_vaapi=w=1920:h=1080:format=nv12' \
        -c:v hevc_vaapi -qp 24 \
        -strict -2 \
        "$HOME/videos/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! >/tmp/recording.pid
    # updateicon "⏺️🎙️"
}

screencast_jack() {
    ffmpeg \
        -threads:v 1 -threads:a 1 -filter_threads 1 -filter_complex_threads 1 \
        -device /dev/dri/card0 \
        -framerate 60 \
        -f kmsgrab -thread_queue_size 256 \
        -i - \
        -f jack -thread_queue_size 256 \
        -i ffmpeg \
        -c:a libopus -ac 2 -ar 48000 -b:a 512k \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' \
        -vf 'hwmap=derive_device=vaapi,scale_vaapi=w=1920:h=1080:format=nv12' \
        -c:v hevc_vaapi -qp 24 \
        -strict -2 \
        -movflags +frag_keyframe+separate_moof+omit_tfhd_offset+empty_moov \
        "$HOME/videos/recording/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! >/tmp/recording.pid
    # updateicon "⏺️🎙️"
}

nvenc_screencast_jack() {
    prime-run ffmpeg \
        -threads:v 1 -threads:a 1 -filter_threads 1 -filter_complex_threads 1 \
        -device /dev/dri/card0 \
        -framerate 60 \
        -f kmsgrab -thread_queue_size 256 \
        -i - \
        -f jack -thread_queue_size 256 \
        -i ffmpeg \
        -c:a libopus -ac 2 -ar 48000 -b:a 512k \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' \
        -vf 'hwmap=derive_device=vaapi,hwdownload,format=bgr0' \
        -c:v hevc_nvenc -qp 24 \
        -strict -2 \
        -movflags +frag_keyframe+separate_moof+omit_tfhd_offset+empty_moov \
        "$HOME/videos/recording/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! >/tmp/recording.pid
    # updateicon "⏺️🎙️"
}

overlay_alsa() {
    ffmpeg -probesize 42M \
        -threads:v 1 -threads:a 1 -filter_threads 1 -filter_complex_threads 1 \
        -vaapi_device /dev/dri/renderD128 \
        -f x11grab -thread_queue_size 512 \
        -video_size "$(xdpyinfo | grep dimensions | awk '{print $2;}')" \
        -framerate 60 \
        -i "$DISPLAY" \
        -f v4l2 -thread_queue_size 512 \
        -video_size 320x240 \
        -framerate 30 \
        -i /dev/video0 \
        -f alsa -thread_queue_size 512 \
        -i default \
        -c:a libopus -ac 2 -ar 48000 -b:a 512k \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' \
        -filter_complex "[1:v]lut3d=$HOME/.local/share/luts/35FreeLUTs/Azrael\ 93.CUBE:interp=tetrahedral[b],[0:v][b]overlay=x=1588:y=830,zmq=bind_address=tcp\\\://127.0.0.1\\\:1236,format=nv12,hwupload" \
        -c:v hevc_vaapi -qp 24 \
        -strict -2 \
        "$HOME/videos/recording/overlay-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! >/tmp/recording.pid
    # updateicon "⏺️🎙️"
}

overlay_pulse() {
    ffmpeg -probesize 42M \
        -threads:v 1 -threads:a 1 -filter_threads 1 -filter_complex_threads 1 \
        -vaapi_device /dev/dri/renderD128 \
        -f x11grab -thread_queue_size 512 \
        -video_size "$(xdpyinfo | grep dimensions | awk '{print $2;}')" \
        -framerate 60 \
        -i "$DISPLAY" \
        -f v4l2 -thread_queue_size 512 \
        -video_size 320x240 \
        -framerate 30 \
        -i /dev/video0 \
        -f pulse -thread_queue_size 512 \
        -i default \
        -c:a libopus -ac 2 -ar 48000 -b:a 512k \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' \
        -filter_complex "[1:v]lut3d=$HOME/.local/share/luts/35FreeLUTs/Azrael\ 93.CUBE:interp=tetrahedral[b],[0:v][b]overlay=x=1588:y=830,zmq=bind_address=tcp\\\://127.0.0.1\\\:1236,format=nv12,hwupload" \
        -c:v hevc_vaapi -qp 24 \
        "$HOME/videos/recording/overlay-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! >/tmp/recording.pid
    # updateicon "⏺️🎙️"
}

nvenc_simple_kms_overlay_jack_tq() {
    prime-run ffmpeg -probesize 42M \
        -threads:v 2 -filter_threads 1 -filter_complex_threads 2 \
        -device /dev/dri/card0 \
        -hwaccel_device 0 -hwaccel cuda -hwaccel_output_format cuda \
        -r 60 \
        -f kmsgrab -thread_queue_size 1024 \
        -i - \
        -video_size 320x240 \
        -r 30 \
        -f v4l2 -thread_queue_size 1024 \
        -i /dev/video0 \
        -threads:a 1 \
        -f jack -thread_queue_size 1024 \
        -i ffmpeg \
        -c:a libopus \
        -ac 2 \
        -ar 48000 \
        -b:a 512k \
        -af 'azmq=bind_address=tcp\://127.0.0.1\:1235,volume=1' -thread_queue_size 1024 \
        -filter_complex '[0:v]hwdownload,format=bgr0[a];[a][1:v]overlay=x=1588:y=830' -thread_queue_size 1024 \
        -c:v hevc_nvenc \
        -b:v 5M -bufsize 6M \
        -qp 24 -strict 2 \
        -movflags +frag_keyframe+separate_moof+omit_tfhd_offset+empty_moov \
        output.mp4
}

nvenc_kms_overlay_jack_tq() {
    prime-run ffmpeg -probesize 42M \
        -threads:v 1 \
        -device /dev/dri/card0 \
        -hwaccel_device 0 -hwaccel cuda -hwaccel_output_format cuda \
        -r 60 \
        -f kmsgrab -thread_queue_size 1024 \
        -i - \
        -threads:v 1 \
        -video_size 320x240 \
        -framerate 30 \
        -f v4l2 -thread_queue_size 1024 \
        -i /dev/video0 \
        -threads:a 1 \
        -f jack -thread_queue_size 1024 \
        -i ffmpeg \
        -filter_complex_threads 2 \
        -filter_complex '[0:v]hwdownload,format=bgr0[a];[a][1:v]overlay=x=1588:y=830' -thread_queue_size 1024 \
        -filter_threads 1 \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' -thread_queue_size 1024 \
        -c:v hevc_nvenc \
        -b:v 5M \
        -bufsize 6M \
        -c:a libopus \
        -ac 2 \
        -ar 48000 \
        -b:a 512k \
        -rc vbr -cq 24 -qmin 24 -qmax 24 \
        -strict 2 \
        -movflags +frag_keyframe+separate_moof+omit_tfhd_offset+empty_moov \
        "$HOME/videos/recording/overlay-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! >/tmp/recording.pid
}

tmp_ol0() {
    ffmpeg -probesize 42M \
        -threads:v 1 -filter_threads 1 -filter_complex_threads 1 \
        -device /dev/dri/card0 \
        -framerate 60 \
        -f kmsgrab -thread_queue_size 1024 \
        -i - \
        -vaapi_device /dev/dri/renderD128 \
        -f v4l2 -thread_queue_size 1024 \
        -framerate 30 \
        -i /dev/video0 \
        -filter_complex '[v:0]hwmap=derive_device=vaapi,scale_vaapi=w=1920:h=1080:format=nv12[a];[1:v]format=nv12|vaapi,hwupload,scale_vaapi=w=320:h=240:format=nv12[b];[a][b]overlay_vaapi=x=0:y=0:alpha=1.0' \
        -c:v hevc_vaapi -qp 24 -strict -2 -movflags +frag_keyframe+separate_moof+omit_tfhd_offset+empty_moov test.mp4
}

tmp_ol1() {
    ffmpeg \
        -threads:v 1 -filter_threads 1 -filter_complex_threads 1 \
        -device /dev/dri/card0 \
        -framerate 60 \
        -f kmsgrab -thread_queue_size 1024 \
        -i - \
        -f v4l2 -thread_queue_size 1024 \
        -framerate 30 \
        -i /dev/video0 \
        -filter_complex '[0:v]hwmap=derive_device=vaapi,hwdownload,format=bgr0[a];[a][1:v]overlay=x=1588:y=830,format=bgr0' \
        -c:v hevc_nvenc -qp 24 -strict -2 -movflags +frag_keyframe+separate_moof+omit_tfhd_offset+empty_moov test.mp4
}

overlay_jack() {
    ffmpeg -y \
        -threads:v 1 -threads:a 1 -filter_threads 1 -filter_complex_threads 1 \
        -hwaccel vaapi \
        -vaapi_device /dev/dri/renderD128 \
        -hwaccel_output_format vaapi \
        -probesize 42M \
        -f x11grab -thread_queue_size 512 \
        -video_size "$(xdpyinfo | grep dimensions | awk '{print $2;}')" \
        -framerate 60 \
        -i "$DISPLAY" \
        -f v4l2 -thread_queue_size 512 \
        -video_size 320x240 \
        -framerate 30 \
        -i /dev/video0 \
        -f jack -channels 1 -thread_queue_size 512 \
        -i ffmpeg \
        -c:a libopus -ac 1 -ar 48000 -b:a 256k \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' \
        -filter_complex '[1:v]lut3d=/home/ryanm/.local/share/luts/35FreeLUTs/Azrael\ 93.CUBE:interp=tetrahedral[b],[0:v][b]overlay=x=1588:y=830,zmq=bind_address=tcp\\\://127.0.0.1\\\:1236,format=nv12,hwupload' \
        -c:v hevc_vaapi -qp 24 \
        -strict -2 \
        "$HOME/videos/recording/overlay-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! >/tmp/recording.pid
    # updateicon "⏺️🎙️"
}

overlay_kms_jack() {
    VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/amd_pro_icd64.json \
        ffmpeg \
        -threads:v 1 -threads:a 1 -filter_threads 1 -filter_complex_threads 1 \
        -device /dev/dri/card0 \
        -framerate 60 \
        -f kmsgrab -thread_queue_size 256 \
        -i - \
        -vaapi_device /dev/dri/renderD128 \
        -f v4l2 \
        -framerate 30 \
        -i /dev/video0 \
        -f jack -thread_queue_size 256 \
        -i ffmpeg \
        -c:a libopus -ac 2 -ar 48000 -b:a 512k \
        -af 'azmq=bind_address=tcp\://127.0.0.1\:1235,volume=1' \
        -filter_complex '[v:0]hwmap=derive_device=vaapi,scale_vaapi=w=1920:h=1080:format=nv12[a];[1:v]format=nv12|vaapi,hwupload,scale_vaapi=w=320:h=240:format=nv12[b];[a][b]overlay_vaapi=x=0:y=0:alpha=1.0' \
        -c:v hevc_vaapi -qp 24 \
        -strict -2 \
        "$HOME/videos/recording/overlay-$(date '+%y%m%d-%H%M-%S').mp4" &
    echo $! >/tmp/recording.pid
    # updateicon "⏺️🎙️"
}

stream_youtube() {
    ffmpeg \
        -threads:a 2 -threads:v 2 -filter_threads 2 -filter_complex_threads 2 \
        -vaapi_device /dev/dri/renderD128 \
        -f kmsgrab -thread_queue_size 512 \
        -framerate 60 \
        -i - \
        -f jack-thread_queue_size 512 \
        -i ffmpeg \
        -c:a libopus -ac 2 -ar 48000 -b:a 256k \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' \
        -vf 'hwmap=derive_device=vaapi,scale_vaapi=w=1920:h=1080:format=nv12' \
        -b:v 6000k -minrate 6000k -maxrate 6000k -bufsize:v 6000k \
        -c:v hevc_vaapi -qp:v 24 \
        -profile:v high -rc:v cbr_ld_hq -level:v 4.2 -r:v 60 -g:v 120 -bf:v 0 -refs:v 16 \
        -f flv rtmp://a.rtmp.youtube.com/live2/"$youtube_stream_key" \
        echo $! >/tmp/recording.pid
    # updateicon "⏺️🎙️"
}

stream_twitch() {
    ffmpeg \
        -threads:v 1 -threads:a 1 -filter_threads 1 -filter_complex_threads 1 \
        -vaapi_device /dev/dri/renderD128 \
        -f x11grab -thread_queue_size 512 \
        -video_size "$(xdpyinfo | grep dimensions | awk '{print $2;}')" \
        -framerate 60 \
        -i "$DISPLAY" \
        -f v4l2 -thread_queue_size 512 \
        -video_size 320x240 \
        -framerate 30 \
        -i /dev/video0 \
        -f jack-thread_queue_size 512 \
        -i ffmpeg \
        -c:a libfdk_aac -bsf:a hevc_mp4toannexb -ac 2 -ar 48000 -b:a 128k \
        -af 'azmq=bind_address=tcp\\\://127.0.0.1\\\:1235,volume=1' \
        -filter_complex '[0:v][1:v]overlay=x=1588:y=830,zmq=bind_address=tcp\\\://127.0.0.1\\\:1236,format=nv12,hwupload' \
        -b:v 2400k -minrate 2400k -maxrate 2400k -bufsize:v 2400k \
        -c:v hevc_vaapi -qp:v 24 \
        -profile:v high -rc:v cbr_ld_hq -level:v 4.2 -r:v 60 -g:v 120 -bf:v 0 -refs:v 16 \
        -f flv rtmp://live.twitch.tv/app/"$twitch_stream_key" \
        echo $! >/tmp/recording.pid
    # updateicon "⏺️🎙️"
}

askrecording() {
    choice=$(printf "screencast\\noverlay\\nvideo\\nnvideo\\nvideo selected\\naudio\\nwebcam\\nscreenshot" | bemenu -i -p "Select recording style:")
    case "$choice" in
    screencast) screencast_jack ;;
    overlay) overlay_jack ;;
    streamy) youtube ;;
    streamt) twitch ;;
    audio) audio_jack ;;
    video) video_kms ;;
    nvideo) nvenc_video_kms ;;
    *selected) nvenc_simple_kms_overlay_jack_tq ;;
    webcam) webcam ;;
    screenshot) screenshot_kms ;;
    esac
}

asktoend() {
    response=$(printf "No\\nYes" | bemenu -i -p "Recording still active. End recording?") &&
        [ "$response" = "Yes" ] && killrecording
}

case "$1" in
screencast) screencast_jack ;;
streamy) youtube ;;
streamt) twitch ;;
audio) audio_jack ;;
video) video_kms ;;
nvideo) nvenc_video_kms ;;
*selected) overlay_jack ;;
kill) killrecording ;;
*) ([ -f /tmp/recording.pid ] && asktoend && exit) || askrecording ;;
esac
